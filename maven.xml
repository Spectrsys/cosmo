<!--
   Copyright 2005 Open Source Applications Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project xmlns:j="jelly:core"
         xmlns:ant="jelly:ant"
         xmlns:maven="jelly:maven"
         xmlns:jackrabbit="jackrabbit">
  <tstamp>
    <format property="NOW" timezone="GMT"
            pattern="yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"/>
  </tstamp>

  <goal name="build">
    <attainGoal name="war:webapp"/>
  </goal>

  <!-- not used in the standard build, but only for manually
       regenerating node type -->
  <goal name="build:nodetypes">
    <delete>
      <fileset dir="${basedir}/src/main/data">
        <include name="nodetypes.xml"/>
      </fileset>
    </delete>
    <jackrabbit:generate
       catalog="${basedir}/src/main/data/nodetypes.txt"
       descriptor="${basedir}/src/main/data/nodetypes.xml"/>
  </goal>

  <preGoal name="java:jar-resources">
    <filter token="VERSION" value="${pom.currentVersion}"/>
  </preGoal>

  <postGoal name="clean:clean">
    <delete file="${basedir}/derby.log"/>
    <delete dir="${maven.src.dir}/webapp/WEB-INF/classes"/>
    <delete dir="${maven.src.dir}/webapp/WEB-INF/lib"/>
    <delete dir="${maven.src.dir}/webapp/WEB-INF/tld"/>
  </postGoal>

  <preGoal name="test:test">
    <j:if test="${unitTestSourcesPresent == 'true' and context.getVariable('maven.test.skip') != 'true'}">
      <attainGoal name="test:reposetup"/>
    </j:if>
  </preGoal>

  <preGoal name="test:single">
    <j:if test="${unitTestSourcesPresent == 'true' and context.getVariable('maven.test.skip') != 'true'}">
      <attainGoal name="test:reposetup"/>
    </j:if>
  </preGoal>

  <goal name="test:reposetup">
    <delete dir="${maven.build.dir}/test-repository"/> 
    <echo>Setting up test repository</echo>
    <jackrabbit:importschema
       configFilePath="${basedir}/src/test/unit/config/repository.xml"
       repositoryHomedirPath="${maven.build.dir}/test-repository"
       username="${cosmo.test.repository.username}"
       password="${cosmo.test.repository.password}"
       descriptor="${basedir}/src/main/data/nodetypes.xml"/>
    <copy todir="${maven.build.dir}" overwrite="true"
          file="${basedir}/src/main/data/import-overlord.xml">
      <filterset>
        <filter token="NOW" value="${NOW}"/>
      </filterset>
    </copy>
    <jackrabbit:importcontent
       configFilePath="${basedir}/src/test/unit/config/repository.xml"
       repositoryHomedirPath="${maven.build.dir}/test-repository"
       username="${cosmo.test.repository.username}"
       password="${cosmo.test.repository.password}"
       content="${maven.build.dir}/import-overlord.xml"/>
  </goal>

  <goal name="dist">
    <attainGoal name="war:war"/>
    <mkdir dir="${cosmo.dist.version}"/>
    <maven:get var="cosmo.war.build.dir" plugin="maven-war-plugin"
               property="maven.war.build.dir"/>
    <maven:get var="cosmo.war.name" plugin="maven-war-plugin"
               property="maven.war.final.name"/>
    <copy file="${cosmo.war.build.dir}/${cosmo.war.name}"
          tofile="${cosmo.dist.version}/${pom.artifactId}-${pom.currentVersion}.war"/>
    <copy todir="${cosmo.dist.version}">
      <fileset dir="${basedir}/src/docs">
        <include name="*.txt"/>
      </fileset>
    </copy>
    <copy todir="${cosmo.dist.version}/license">
      <fileset dir="${basedir}/src/docs/license"/>
    </copy>
  </goal>

  <goal name="dist:release">
    <attainGoal name="dist:clean"/>
    <attainGoal name="dist"/>
    <tar destfile="${cosmo.dist.version}.tar.gz"
         compression="gzip" longfile="gnu">
      <tarfileset dir="${cosmo.dist.version}"
                  prefix="${pom.artifactId}-${pom.currentVersion}"/>
    </tar>
  </goal>

  <goal name="dist:clean">
    <delete dir="${cosmo.dist}"/>
  </goal>
</project>
