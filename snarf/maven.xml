<!--
   Copyright 2005-2006 Open Source Applications Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project xmlns:j="jelly:core"
         xmlns:ant="jelly:ant"
         xmlns:maven="jelly:maven">
  <postGoal name="clean:clean">
    <delete file="${basedir}/derby.log"/>
  </postGoal>

  <goal name="dist:tomcat">
    <attainGoal name="java:prepare-filesystem"/>
    <get src="${ext.tomcat.url}"
         dest="${maven.build.dir}/${ext.tomcat.package}.zip"
         usetimestamp="true"/>
    <unzip src="${maven.build.dir}/${ext.tomcat.package}.zip"
           dest="${maven.build.dir}" compression="zip"/>
    <copy todir="${bundle.dist.version}/tomcat">
      <fileset dir="${maven.build.dir}/${ext.tomcat.package}">
        <exclude name="**/conf/Catalina/localhost/*.xml"/>
        <exclude name="**/conf/server.xml"/>
        <exclude name="**/common/classes/logging.properties"/>
      </fileset>
    </copy>
    <!-- XXX can't figure out the right pattern to use to not copy
         this dir in the first place -->
    <delete dir="${bundle.dist.version}/tomcat/webapps"/>
    <mkdir dir="${bundle.dist.version}/tomcat/webapps"/>
    <mkdir dir="${bundle.dist.version}/tomcat/logs"/>
    <chmod perm="755">
      <fileset dir="${bundle.dist.version}/tomcat/bin">
        <include name="*.sh"/>
        <include name="*.bat"/>
      </fileset>
    </chmod>
  </goal>

  <goal name="dist:server">
    <mkdir dir="${bundle.dist.version}/logs"/>
    <copy todir="${bundle.dist.version}/bin">
      <fileset dir="${basedir}/src/bin"/>
    </copy>
    <chmod perm="755">
      <fileset dir="${bundle.dist.version}/bin">
        <include name="osafsrvctl"/>
      </fileset>
    </chmod>
    <copy todir="${bundle.dist.version}">
      <fileset dir="${basedir}/src/docs">
        <include name="*.txt"/>
      </fileset>
    </copy>
    <copy todir="${bundle.dist.version}/tomcat/conf"
          file="${basedir}/src/main/config/server.xml"/>
    <copy todir="${bundle.dist.version}/etc"
          file="${basedir}/src/main/config/cosmo.properties"/>
    <j:forEach var="lib" items="${pom.artifacts}">
      <j:choose>

        <j:when test="${lib.dependency.type == 'jar'}">
          <j:choose>
            <j:when test="${lib.dependency.getProperty('jar.endorsed')=='true'}">
              <copy todir="${bundle.dist.version}/tomcat/common/endorsed"
                  file="${lib.path}"/>
            </j:when>
            <j:otherwise>
              <copy todir="${bundle.dist.version}/tomcat/common/lib"
                  file="${lib.path}"/>
            </j:otherwise>
          </j:choose>
        </j:when>

        <j:when test="${lib.dependency.type == 'war'}">
          <copy todir="${bundle.dist.version}/tomcat/webapps"
                file="${lib.path}"/>
        </j:when>

        <j:when test="${lib.dependency.type == 'app'}">
          <copy todir="${bundle.dist.version}/lib"
                file="${lib.path}"/>
        </j:when>
      </j:choose>
    </j:forEach>
    <copy todir="${bundle.dist.version}/tomcat/common/classes"
          file="${basedir}/src/main/config/log4j.xml"/>
    <copy todir="${bundle.dist.version}/tomcat/webapps/ROOT">
      <fileset dir="${basedir}/src/webapp"/>
    </copy>
  </goal>

  <goal name="dist">
    <attainGoal name="dist:tomcat"/>
    <attainGoal name="dist:server"/>
  </goal>

  <goal name="dist:release">
    <attainGoal name="dist:clean"/>
    <attainGoal name="dist"/>
    <tar destfile="${bundle.dist.version}.tar.gz"
         compression="gzip" longfile="gnu">
      <tarfileset dir="${bundle.dist.version}" mode="755"
                  prefix="osaf-server-bundle-${pom.currentVersion}">
        <include name="bin/osafsrvctl"/>
        <include name="tomcat/bin/*.sh"/>
      </tarfileset>
      <tarfileset dir="${bundle.dist.version}"
                  prefix="osaf-server-bundle-${pom.currentVersion}">
        <exclude name="bin/osafsrvctl"/>
        <exclude name="tomcat/bin/*.sh"/>
      </tarfileset>
    </tar>
  </goal>

  <goal name="dist:clean">
    <delete dir="${bundle.dist}"/>
  </goal>

  <goal name="dist:clean-data">
    <delete dir="${bundle.dist.version}/data"/>
  </goal>
</project>
