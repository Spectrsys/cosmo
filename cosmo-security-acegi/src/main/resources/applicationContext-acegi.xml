<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

  <!-- authentication resources -->

  <bean id="userDetailsService" class="org.osaf.cosmo.security.acegi.userdetails.CosmoUserDetailsService">
     <property name="userDao" ref="userDao"/>
  </bean>

  <bean id="passwordEncoder" class="org.springframework.security.providers.encoding.Md5PasswordEncoder"/>

  <bean id="daoAuthenticationProvider" class="org.springframework.security.providers.dao.DaoAuthenticationProvider">
    <property name="userDetailsService">
      <ref bean="userDetailsService"/>
    </property>
    <property name="passwordEncoder">
      <ref bean="passwordEncoder"/>
    </property>
  </bean>

  <bean id="anonymousAuthenticationProvider" class="org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider">
    <property name="key" value="badgerbadgerbadger"/>
  </bean>

  <bean id="ticketAuthenticationProvider" class="org.osaf.cosmo.security.acegi.providers.ticket.TicketAuthenticationProvider">
    <property name="contentDao" ref="contentDao"/>
  </bean>

  <bean id="wsseAuthenticationProvider" class="org.osaf.cosmo.security.acegi.providers.wsse.WsseAuthenticationProvider">
    <property name="userDao" ref="userDao"/>
  </bean>

  <bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
    <property name="providers">
      <list>
        <ref bean="daoAuthenticationProvider"/>
        <ref bean="anonymousAuthenticationProvider"/>
        <ref bean="ticketAuthenticationProvider"/>
        <ref bean="wsseAuthenticationProvider"/>
      </list>
    </property>
  </bean>

  <!-- authorization resources -->

  <bean id="ticketVoter" class="org.osaf.cosmo.security.acegi.providers.ticket.TicketVoter"/>

  <bean id="roleVoter" class="org.springframework.security.vote.RoleVoter"/>

  <bean id="defaultAccessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
    <property name="allowIfAllAbstainDecisions" value="false"/>
    <property name="decisionVoters">
      <list>
        <ref bean="roleVoter"/>
      </list>
    </property>
  </bean>
  
  <!--  AccessDecisionManager that verifies principal has access to user paths -->
  <bean id="userPathAccessDecisionManager" class="org.osaf.cosmo.security.acegi.UserPathAccessDecisionManager"/>

  <!-- security facade resources -->
  <bean id="securityManager" class="org.osaf.cosmo.security.acegi.CosmoSecurityManagerImpl">
    <property name="authenticationManager">
      <ref bean="authenticationManager"/>
    </property>
  </bean>

  <!-- filter that checks for Ticket authentication and clears.  To be used
       after the session integration filter to prevent ticket authentication
       from sticking -->
  <bean id="protocolTicketAuthenticationClearingFilter" class="org.osaf.cosmo.security.acegi.providers.ticket.TicketAuthenticationClearingFilter"/>

  <bean id="defaultFilterInvocationInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
     <property name="authenticationManager" ref="authenticationManager"/>
     <property name="accessDecisionManager" ref="defaultAccessDecisionManager"/>
     <property name="objectDefinitionSource">
       <value>
         CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
         PATTERN_TYPE_APACHE_ANT
         /account/new=ROLE_ANONYMOUS
         /account/signup=ROLE_ANONYMOUS
         /account=ROLE_ROOT,ROLE_USER
         /account/view=ROLE_ROOT,ROLE_USER
         /account/update=ROLE_ROOT,ROLE_USER
         /account/activate/*=ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT
         /account/deleted=ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT
         /account/password/reset/*=ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT
         /account/password/recover=ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT
         /account/activation/recover=ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT
         /login=ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT
         /signup=ROLE_ANONYMOUS
         /welcome=ROLE_ANONYMOUS, ROLE_USER, ROLE_ROOT
         /security_check=ROLE_ANONYMOUS
         /loginfailed=ROLE_ANONYMOUS
         /logout=ROLE_ROOT,ROLE_USER
         /browse/**=ROLE_USER, ROLE_ROOT
         /admin/status/**=ROLE_ROOT
         /admin/user/**=ROLE_ROOT
         /error=ROLE_ANONYMOUS,ROLE_USER,ROLE_ROOT
         /error/**=ROLE_ANONYMOUS,ROLE_USER,ROLE_ROOT
         /help/privacy=ROLE_ROOT,ROLE_USER,ROLE_ANONYMOUS
         /help/about=ROLE_ROOT,ROLE_USER,ROLE_ANONYMOUS
         /help/tos=ROLE_ROOT,ROLE_USER,ROLE_ANONYMOUS
         /help=ROLE_ROOT,ROLE_USER
         /help/**=ROLE_ROOT,ROLE_USER
         /**=ROLE_ROOT
       </value>
     </property>
   </bean>

  <bean id="protocolWsseProcessingFilter" class="org.osaf.cosmo.security.acegi.providers.wsse.WsseTokenProcessingFilter"/>

  <!-- security beans for protocol access -->
  <bean id="dummyAccessDecisionMaanger" class="org.osaf.cosmo.security.acegi.DummyAccessDecisionManager"/>

  <bean id="protocolHttpRequestContextIntegrationFilter" class="org.osaf.cosmo.security.acegi.context.HttpRequestContextIntegrationFilter"/>

  <bean id="protocolTicketProcessingFilter" class="org.osaf.cosmo.security.acegi.providers.ticket.TicketProcessingFilter"/>

  <bean id="protocolExtraTicketProcessingFilter" class="org.osaf.cosmo.security.acegi.providers.ticket.ExtraTicketProcessingFilter">
    <property name="securityManager">
      <ref bean="securityManager" />
    </property>
    <property name="contentDao">
      <ref bean="contentDao" />
    </property>
  </bean>

</beans>
