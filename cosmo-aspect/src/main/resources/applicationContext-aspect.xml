<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    Copyright 2006 Open Source Applications Foundation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    ">

  <!--  AOP Configuration -->

  <!--  define advice for all service methods -->
  <aop:config>
      <aop:pointcut id="serviceOperation" expression="execution(* org.osaf.cosmo.service.*Service.*(..))"/>
      <aop:advisor pointcut-ref="serviceOperation" order="1" advice-ref="timingAdvice"/>
      <aop:advisor pointcut-ref="serviceOperation" order="2" advice-ref="throwAwayHibernateSessionAdvice"/>
      <aop:advisor pointcut-ref="serviceOperation" order="3" advice-ref="txAdvice"/>
  </aop:config>

  <!-- transactional advice -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <!-- getPasswordRecovery is only 'get' thats not read-only -->
      <tx:method name="getPasswordRecovery"/>
      
      <!--  checked exception OverlordDeletionException should cause rollback  -->
      <tx:method name="remove*" rollback-for="OverlordDeletionException"/>

      <!-- all methods starting with 'get', 'load', and 'find' are read-only -->
      <tx:method name="get*" read-only="true"/>
      <tx:method name="load*" read-only="true"/>
      <tx:method name="find*" read-only="true"/>
      
      <!-- other methods use the default transaction settings -->
      <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>

  <!-- Timing advice, useful for timing operations -->
  <bean id="timingAdvice" class="org.springframework.aop.interceptor.PerformanceMonitorInterceptor">
    <property name="loggerName" value="org.osaf.cosmo.perf" />
  </bean>

  <!-- required for aspectj annotations support -->
  <aop:aspectj-autoproxy/>

  <!--  Monitors all service calls (ContentService for now) and
        logs all calls that aren't secured by advice in SecurityAdvice 
   -->
  <bean id="securityAdviceMonitorAspect" class="org.osaf.cosmo.aspect.SecurityAdviceMonitor">
    <property name="order" value="4"/>
  </bean>

  <!--  Intercepts service calls and verifies current principal has sufficient
        privileges to execute api.  Aspect bean is annotated with aspecj
        annotations.
   -->
  <bean id="securityAspect" init-method="init" class="org.osaf.cosmo.aspect.SecurityAdvice">
    <property name="securityManager">
      <ref bean="securityManager" />
    </property>
    <property name="contentDao">
      <ref bean="contentDao" />
    </property>
    <property name="userDao">
      <ref bean="userDao" />
    </property>
    <property name="order" value="5"/>
    <property name="enabled" value="true"/>
  </bean>

  <!--  Intercepts service calls and logs events -->
  <bean id="eventLogAspect" init-method="init" class="org.osaf.cosmo.aspect.EventLogAdvice">
    <property name="securityManager">
      <ref bean="securityManager" />
    </property>
    <property name="eventLogDao">
      <ref bean="eventLogDao" />
    </property>
    <property name="order" value="6"/>
    <property name="enabled" value="true"/>
  </bean>

</beans>
