
                            Cosmo Sharing Server 0.2
                           Frequently Asked Questions


BUILDING
========

Q: Wow, the build seems to be downloading a lot of jars. Is that
   normal?

    A: Yes. Cosmo has a lot of external dependencies. The jars only need
       to be downloaded the first time you build though, and
       afterwards only when we update our dependencies.

Q: Where did all those downloaded jars go?

    A: In your Maven repository at ~/.maven/repository.

Q: Didn't I download all those jars once before?

    A: Yes, but in 0.2 we have switched from Ant (with the Maven 2.0
       download management tools for Ant) to Maven 1.0. The repository
       formats are different, and so we have to set up a new one the
       first time we build Cosmo.

Q: The build fails because Maven can't download one of my jars. What's
   going on?

    A: A few of our dependencies are not distributed by ibiblio
      (jta.jar is not indepently distributable, and the
      jcr/jackrabbit/jcr-server jars are built from source). OSAF
      hosts a Maven repository containing all of the dependencies. You
      should make sure your project.properties file contains this:

        maven.repo.remote=http://downloads.osafoundation.org/maven/

      and that it is not overridden in your build.properties file.


TESTING
=======

Q: Why do I have to run a separate Maven command to set up the test
   database? Can't that be done automatically?

    A: No, because we're using HSQLDB in embedded mode, which means
       that the database is owned by a single process. To run our
       tests, Maven forks off a separate process for JUnit. If we used
       a single Maven command to set up the test db and run the tests,
       then the forked JUnit JVM would not be able to access the
       database.


DEPLOYMENT
==========

Q: Why are you using an RDBMS anyway?

    A: Because it was the easiest way to get up and running. We will
       migrate user and role info to JCR very soon (likely in
       0.3). This will simplify every stage of the process.


$Id$
