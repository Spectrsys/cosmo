#!/usr/bin/perl -w
# -*- Mode: Perl; indent-tabs-mode: nil; -*-

use strict;

use Cosmo::CMP ();
use Cosmo::DAV ();
use Cosmo::User ();
use File::Basename ();
use Getopt::Long ();

BEGIN { $0 = File::Basename::basename($0) }

use constant VERSION => '0.02';
use constant PROGRAM => $0;
use constant USAGE => <<EOT;
Usage: $0 [OPTIONS...]

A simple tool for bulk loading test accounts into a Cosmo server.

Options:
  -s               server root URL (defaults to http://localhost:8080)
  -u               admin username (defaults to root)
  -p               admin password (defaults to cosmo)
  -n               number of test accounts to create (defaults to 20)
  -d               print debugging information to STDOUT
  -h               list available command line options (this page)
  -v               print version information and exit
EOT

use constant DEFAULT_SERVER_URL => 'http://localhost:8080';
use constant DEFAULT_ADMIN_USERNAME => 'root';
use constant DEFAULT_ADMIN_PASSWORD => 'cosmo';
use constant DEFAULT_NUM_ACCOUNTS => 20;

$SIG{__DIE__} = sub { die sprintf("%s: %s", PROGRAM, $_[0]) };

my ($server_url, $admin_username, $admin_password, $num_accounts,
    $opt_debug, $opt_help, $opt_version);

# process command line options
Getopt::Long::GetOptions(
    "s=s" => \$server_url,
    "u=s" => \$admin_username,
    "p=s" => \$admin_password,
    "n=i" => \$num_accounts,
    "d"   => \$opt_debug,
    "h"   => \$opt_help,
    "v"   => \$opt_version,
    );
(print USAGE and exit) if $opt_help;
(print sprintf("%s/%s\n", PROGRAM, VERSION) and exit) if $opt_version;

$server_url ||= DEFAULT_SERVER_URL;
chop($server_url) if $server_url =~ m|/$|;
$admin_username ||= DEFAULT_ADMIN_USERNAME;
$admin_password ||= DEFAULT_ADMIN_PASSWORD;
$num_accounts ||= DEFAULT_NUM_ACCOUNTS;

# set up client and check server availability
my $cmp = Cosmo::CMP->new($server_url, $admin_username, $admin_password,
                          $opt_debug);
$cmp->agent(PROGRAM . "/" . VERSION);
$cmp->check_server_availability();

# create accounts and calendars
for my $num (1..$num_accounts) {
    my $username = "user$num";

    my $user = new Cosmo::User();
    $user->username($username);
    $user->password($username);
    $user->first_name($username);
    $user->last_name($username);
    $user->email("$username\@localhost");

    $cmp->create_user($user);
    print "Created user at " . $user->user_url() . "\n";

    my $dav = Cosmo::DAV->new($server_url, $user->username,
                              $user->password, $opt_debug);
    $dav->agent(PROGRAM . "/" . VERSION);
    my $calendar_url = sprintf("%s%s/", $dav->homedir_url(), "test");
    $dav->mkcalendar($calendar_url);
    print "Created calendar at $calendar_url\n";

    if ($num != $num_accounts) {
        print "\n";
    }
}

exit;
