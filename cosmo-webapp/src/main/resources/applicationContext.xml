<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2005-2006 Open Source Applications Foundation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd">

  <bean id="idGenerator" class="org.apache.commons.id.uuid.VersionFourGenerator" />

  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename" value="MessageResources"/>
  </bean>

  <!-- load the cosmo properties file and make the cosmo
       config properties available to other spring beans -->
  <jee:jndi-lookup id="cosmoConfigPath" jndi-name="java:comp/env/cosmo/config"/>

  <bean id="propertyPlaceholderConfigurer" class="org.osaf.cosmo.spring.CosmoPropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <ref bean="cosmoConfigPath"/>
      </list>
    </property>
  </bean>

  <!-- resources needed for database access -->
  <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/cosmo"/>

  <!--  Transaction Definitions -->
  
  <!-- Transaction manager for a single Hibernate SessionFactory
       (alternative to JTA) -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <!-- the servlet context configurer, which is used instead of
       spring's servlet context export mechanism because config
       information needs to be loaded from the database -->

  <bean id="servletContextConfigurer" class="org.osaf.cosmo.ui.config.ServletContextConfigurer">
    <property name="userService" ref="userService"/>
  </bean>

   <!-- filter chain that kicks off request-time processing -->
   <bean id="protocolAuthenticationEntryPoint" class="org.osaf.cosmo.acegisecurity.ui.CosmoAuthenticationEntryPoint"/>

   <bean id="defaultFilterChainProxy" class="org.springframework.security.util.FilterChainProxy">
      <security:filter-chain-map path-type="ant">
          <security:filter-chain pattern="/**" filters="defaultHttpSessionContextIntegrationFilter,protocolTicketAuthenticationClearingFilter,defaultAnonymousProcessingFilter,defaultExceptionTranslationFilter,defaultFilterInvocationInterceptor"/>
      </security:filter-chain-map>
   </bean>

   <bean id="webuiFilterChainProxy" class="org.springframework.security.util.FilterChainProxy">
      <security:filter-chain-map path-type="ant">
          <security:filter-chain pattern="/**" filters="defaultHttpSessionContextIntegrationFilter,protocolTicketAuthenticationClearingFilter,webuiFormBasedProcessingFilter,defaultExceptionTranslationFilter,defaultFilterInvocationInterceptor"/>
      </security:filter-chain-map>
   </bean>

  <!-- filter that integrates SecurityContext into HTTP Session -->

  <bean id="defaultHttpSessionContextIntegrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter"/>

  <!-- filter that performs form-based authentication -->

  <bean id="defaultFormBasedAuthenticationEntryPoint" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
    <property name="loginFormUrl" value="/login"/>
    <property name="forceHttps" value="false"/>
  </bean>

  <bean id="webuiFormBasedProcessingFilter" class="org.osaf.cosmo.acegisecurity.ui.webapp.CosmoAuthenticationProcessingFilter">
    <property name="authenticationManager" ref="authenticationManager"/>
    <property name="filterProcessesUrl" value="/security_check"/>
    <property name="authenticationFailureUrl" value="/loginfailed"/>
    <property name="cosmoDefaultLoginUrl" value="/pim"/>
  </bean>

  <!-- filter that performs anonymous authentication -->

  <bean id="defaultAnonymousProcessingFilter" class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter">
    <property name="key" value="badgerbadgerbadger"/>
    <property name="userAttribute" value="anonymous,ROLE_ANONYMOUS"/>
  </bean>

  <!-- filter that converts authen/authz exceptions to web pages -->

  <bean id="defaultExceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
    <property name="authenticationEntryPoint" ref="defaultFormBasedAuthenticationEntryPoint"/>
  </bean>

  <bean id="protocolBasicProcessingFilter" class="org.springframework.security.ui.basicauth.BasicProcessingFilter">
    <property name="authenticationManager" ref="authenticationManager"/>
    <property name="authenticationEntryPoint" ref="protocolAuthenticationEntryPoint"/>
  </bean>

  <bean id="protocolExceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter">
    <property name="authenticationEntryPoint" ref="protocolAuthenticationEntryPoint"/>
    <property name="createSessionAllowed" value="false"/>
  </bean>

  <!-- Logging resources -->
  <bean id="httpLoggingFormat" class="java.lang.String">
    <constructor-arg type="java.lang.String" value="${cosmo.log.HttpLoggingFilter.format}"/>
  </bean>
   
  <!--  Retry Filter -->
  <bean id="retryFilter" class="org.osaf.cosmo.filters.RetryFilter">
    <property name="maxRetries" value="10"/>
    <property name="methods">
      <list>
        <value>POST</value>
        <value>PUT</value>
        <value>DELETE</value>
        <value>MKCALENDAR</value>
      </list>
    </property>
    <property name="exceptions">
      <list>
        <value>org.springframework.dao.ConcurrencyFailureException</value>
        <value>org.springframework.dao.DataIntegrityViolationException</value>
      </list>
    </property>
  </bean>
   
  <!-- give JSP tag functions access to config properties -->
  <bean id="jspConfigProps" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.osaf.cosmo.ui.TagFunctions"/>
    <property name="targetMethod" value="setPropertyPlaceholderConfigurer"/>
    <property name="arguments">
        <list><ref bean="propertyPlaceholderConfigurer"/></list>
    </property>
  </bean>

</beans>
